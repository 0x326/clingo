cmake_minimum_required(VERSION 3.1)
project(CLINGO VERSION 5.1.1 LANGUAGES C CXX)
if (POLICY CMP0063)
    cmake_policy(SET CMP0063 NEW)
endif()

include(CMakeDependentOption)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

# Enable folders in IDEs like Visual Studio
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

option(BUILD_CLINGO_LIB_SHARED "build clingo library shared" ON)
option(CLINGO_ENABLE_PYTHON "enable python support" ON)
option(CLINGO_ENABLE_LUA "enable lua support" ON)

CMAKE_DEPENDENT_OPTION(CLINGO_REQUIRE_PYTHON "fail if python support not found" OFF "CLINGO_ENABLE_PYTHON" OFF)
CMAKE_DEPENDENT_OPTION(CLINGO_REQUIRE_LUA    "fail if lua support not found"    OFF "CLINGO_ENABLE_LUA"    OFF)

set(clingo_external_libs)
if (CLINGO_ENABLE_PYTHON)
    if (CLINGO_REQUIRE_PYTHON)
        find_package(PythonLibs REQUIRED)
    else()
        find_package(PythonLibs)
    endif()
    if(PYTHONLIBS_FOUND)
        add_library(Python::Python INTERFACE IMPORTED)
        set_property(TARGET Python::Python PROPERTY INTERFACE_COMPILE_DEFINITIONS "WITH_PYTHON")
        set_property(TARGET Python::Python PROPERTY INTERFACE_LINK_LIBRARIES "${PYTHON_LIBRARIES}")
        set_property(TARGET Python::Python PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${PYTHON_INCLUDE_DIRS}")
        list(APPEND clingo_external_libs Python::Python)
    endif()
endif()
if (CLINGO_ENABLE_LUA)
    if (CLINGO_REQUIRE_LUA)
        find_package(Lua)
    else()
        find_package(Lua REQUIRED)
    endif()
    if(LUA_FOUND)
        add_library(Lua::Lua INTERFACE IMPORTED)
        set_property(TARGET Lua::Lua PROPERTY INTERFACE_COMPILE_DEFINITIONS "WITH_LUA")
        set_property(TARGET Lua::Lua PROPERTY INTERFACE_LINK_LIBRARIES "${LUA_LIBRARIES}")
        set_property(TARGET Lua::Lua PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${LUA_INCLUDE_DIR}")
        list(APPEND clingo_external_libs Lua::Lua)
    endif()
endif()
find_package(BISON "2.5" REQUIRED)
find_package(RE2C REQUIRED)

if (POLICY CMP0063 AND (BUILD_CLINGO_LIB_SHARED OR PYTHONLIBS_FOUND OR LUA_FOUND))
    set(CMAKE_CXX_VISIBILITY_PRESET hidden)
    set(CMAKE_C_VISIBILITY_PRESET hidden)
endif()

enable_testing()

# NOTE: assumes that submodule has been initialized
add_subdirectory(clasp)
add_subdirectory(libreify)
add_subdirectory(app/reify)
add_subdirectory(libgringo)
add_subdirectory(app/gringo)
add_subdirectory(libclingo)
add_subdirectory(app/clingo)
add_subdirectory(examples/c)
add_subdirectory(examples/cc)
if (PYTHONLIBS_FOUND)
    add_subdirectory(app/pyclingo)
endif()
if (LUA_FOUND)
    add_subdirectory(app/luaclingo)
endif()

if (BUILD_CLINGO_LIB_SHARED OR PYTHONLIBS_FOUND OR LUA_FOUND)
    foreach(target libclingo libgringo libpotassco libclasp libreify)
        set_target_properties(${target} PROPERTIES POSITION_INDEPENDENT_CODE ON)
    endforeach()
endif()

